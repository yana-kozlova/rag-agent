"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ai-sdk+react@2.0.77_react@18.3.1_zod@3.25.76";
exports.ids = ["vendor-chunks/@ai-sdk+react@2.0.77_react@18.3.1_zod@3.25.76"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@ai-sdk+react@2.0.77_react@18.3.1_zod@3.25.76/node_modules/@ai-sdk/react/dist/index.mjs":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@ai-sdk+react@2.0.77_react@18.3.1_zod@3.25.76/node_modules/@ai-sdk/react/dist/index.mjs ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Chat: () => (/* binding */ Chat),\n/* harmony export */   experimental_useObject: () => (/* binding */ experimental_useObject),\n/* harmony export */   useChat: () => (/* binding */ useChat),\n/* harmony export */   useCompletion: () => (/* binding */ useCompletion)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.2.4_@opentelemetry+api@1.9.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var ai__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ai */ \"(ssr)/./node_modules/.pnpm/ai@5.0.77_zod@3.25.76/node_modules/ai/dist/index.mjs\");\n/* harmony import */ var throttleit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! throttleit */ \"(ssr)/./node_modules/.pnpm/throttleit@2.1.0/node_modules/throttleit/index.js\");\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! swr */ \"(ssr)/./node_modules/.pnpm/swr@2.3.6_react@18.3.1/node_modules/swr/dist/index/index.mjs\");\n/* harmony import */ var _ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ai */ \"(ssr)/./node_modules/.pnpm/@ai-sdk+provider-utils@3.0.12_zod@3.25.76/node_modules/@ai-sdk/provider-utils/dist/index.mjs\");\nvar __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\n// src/use-chat.ts\n\n\n// src/chat.react.ts\n\n\n// src/throttle.ts\n\nfunction throttle(fn, waitMs) {\n  return waitMs != null ? throttleit__WEBPACK_IMPORTED_MODULE_1__(fn, waitMs) : fn;\n}\n\n// src/chat.react.ts\nvar _messages, _status, _error, _messagesCallbacks, _statusCallbacks, _errorCallbacks, _callMessagesCallbacks, _callStatusCallbacks, _callErrorCallbacks;\nvar ReactChatState = class {\n  constructor(initialMessages = []) {\n    __privateAdd(this, _messages, void 0);\n    __privateAdd(this, _status, \"ready\");\n    __privateAdd(this, _error, void 0);\n    __privateAdd(this, _messagesCallbacks, /* @__PURE__ */ new Set());\n    __privateAdd(this, _statusCallbacks, /* @__PURE__ */ new Set());\n    __privateAdd(this, _errorCallbacks, /* @__PURE__ */ new Set());\n    this.pushMessage = (message) => {\n      __privateSet(this, _messages, __privateGet(this, _messages).concat(message));\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.popMessage = () => {\n      __privateSet(this, _messages, __privateGet(this, _messages).slice(0, -1));\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.replaceMessage = (index, message) => {\n      __privateSet(this, _messages, [\n        ...__privateGet(this, _messages).slice(0, index),\n        // We deep clone the message here to ensure the new React Compiler (currently in RC) detects deeply nested parts/metadata changes:\n        this.snapshot(message),\n        ...__privateGet(this, _messages).slice(index + 1)\n      ]);\n      __privateGet(this, _callMessagesCallbacks).call(this);\n    };\n    this.snapshot = (value) => structuredClone(value);\n    this[\"~registerMessagesCallback\"] = (onChange, throttleWaitMs) => {\n      const callback = throttleWaitMs ? throttle(onChange, throttleWaitMs) : onChange;\n      __privateGet(this, _messagesCallbacks).add(callback);\n      return () => {\n        __privateGet(this, _messagesCallbacks).delete(callback);\n      };\n    };\n    this[\"~registerStatusCallback\"] = (onChange) => {\n      __privateGet(this, _statusCallbacks).add(onChange);\n      return () => {\n        __privateGet(this, _statusCallbacks).delete(onChange);\n      };\n    };\n    this[\"~registerErrorCallback\"] = (onChange) => {\n      __privateGet(this, _errorCallbacks).add(onChange);\n      return () => {\n        __privateGet(this, _errorCallbacks).delete(onChange);\n      };\n    };\n    __privateAdd(this, _callMessagesCallbacks, () => {\n      __privateGet(this, _messagesCallbacks).forEach((callback) => callback());\n    });\n    __privateAdd(this, _callStatusCallbacks, () => {\n      __privateGet(this, _statusCallbacks).forEach((callback) => callback());\n    });\n    __privateAdd(this, _callErrorCallbacks, () => {\n      __privateGet(this, _errorCallbacks).forEach((callback) => callback());\n    });\n    __privateSet(this, _messages, initialMessages);\n  }\n  get status() {\n    return __privateGet(this, _status);\n  }\n  set status(newStatus) {\n    __privateSet(this, _status, newStatus);\n    __privateGet(this, _callStatusCallbacks).call(this);\n  }\n  get error() {\n    return __privateGet(this, _error);\n  }\n  set error(newError) {\n    __privateSet(this, _error, newError);\n    __privateGet(this, _callErrorCallbacks).call(this);\n  }\n  get messages() {\n    return __privateGet(this, _messages);\n  }\n  set messages(newMessages) {\n    __privateSet(this, _messages, [...newMessages]);\n    __privateGet(this, _callMessagesCallbacks).call(this);\n  }\n};\n_messages = new WeakMap();\n_status = new WeakMap();\n_error = new WeakMap();\n_messagesCallbacks = new WeakMap();\n_statusCallbacks = new WeakMap();\n_errorCallbacks = new WeakMap();\n_callMessagesCallbacks = new WeakMap();\n_callStatusCallbacks = new WeakMap();\n_callErrorCallbacks = new WeakMap();\nvar _state;\nvar Chat = class extends ai__WEBPACK_IMPORTED_MODULE_2__.AbstractChat {\n  constructor({ messages, ...init }) {\n    const state = new ReactChatState(messages);\n    super({ ...init, state });\n    __privateAdd(this, _state, void 0);\n    this[\"~registerMessagesCallback\"] = (onChange, throttleWaitMs) => __privateGet(this, _state)[\"~registerMessagesCallback\"](onChange, throttleWaitMs);\n    this[\"~registerStatusCallback\"] = (onChange) => __privateGet(this, _state)[\"~registerStatusCallback\"](onChange);\n    this[\"~registerErrorCallback\"] = (onChange) => __privateGet(this, _state)[\"~registerErrorCallback\"](onChange);\n    __privateSet(this, _state, state);\n  }\n};\n_state = new WeakMap();\n\n// src/use-chat.ts\nfunction useChat({\n  experimental_throttle: throttleWaitMs,\n  resume = false,\n  ...options\n} = {}) {\n  const chatRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(\n    \"chat\" in options ? options.chat : new Chat(options)\n  );\n  const shouldRecreateChat = \"chat\" in options && options.chat !== chatRef.current || \"id\" in options && chatRef.current.id !== options.id;\n  if (shouldRecreateChat) {\n    chatRef.current = \"chat\" in options ? options.chat : new Chat(options);\n  }\n  const optionsId = \"id\" in options ? options.id : null;\n  const subscribeToMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (update) => chatRef.current[\"~registerMessagesCallback\"](update, throttleWaitMs),\n    // optionsId is required to trigger re-subscription when the chat ID changes\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [throttleWaitMs, optionsId]\n  );\n  const messages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    subscribeToMessages,\n    () => chatRef.current.messages,\n    () => chatRef.current.messages\n  );\n  const status = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    chatRef.current[\"~registerStatusCallback\"],\n    () => chatRef.current.status,\n    () => chatRef.current.status\n  );\n  const error = (0,react__WEBPACK_IMPORTED_MODULE_0__.useSyncExternalStore)(\n    chatRef.current[\"~registerErrorCallback\"],\n    () => chatRef.current.error,\n    () => chatRef.current.error\n  );\n  const setMessages = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (messagesParam) => {\n      if (typeof messagesParam === \"function\") {\n        messagesParam = messagesParam(chatRef.current.messages);\n      }\n      chatRef.current.messages = messagesParam;\n    },\n    [chatRef]\n  );\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (resume) {\n      chatRef.current.resumeStream();\n    }\n  }, [resume, chatRef]);\n  return {\n    id: chatRef.current.id,\n    messages,\n    setMessages,\n    sendMessage: chatRef.current.sendMessage,\n    regenerate: chatRef.current.regenerate,\n    clearError: chatRef.current.clearError,\n    stop: chatRef.current.stop,\n    error,\n    resumeStream: chatRef.current.resumeStream,\n    status,\n    addToolResult: chatRef.current.addToolResult\n  };\n}\n\n// src/use-completion.ts\n\n\n\nfunction useCompletion({\n  api = \"/api/completion\",\n  id,\n  initialCompletion = \"\",\n  initialInput = \"\",\n  credentials,\n  headers,\n  body,\n  streamProtocol = \"data\",\n  fetch: fetch2,\n  onFinish,\n  onError,\n  experimental_throttle: throttleWaitMs\n} = {}) {\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id || hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])([api, completionId], null, {\n    fallbackData: initialCompletion\n  });\n  const { data: isLoading = false, mutate: mutateLoading } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    [completionId, \"loading\"],\n    null\n  );\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const completion = data;\n  const [abortController, setAbortController] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n  const extraMetadataRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({\n    credentials,\n    headers,\n    body\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    extraMetadataRef.current = {\n      credentials,\n      headers,\n      body\n    };\n  }, [credentials, headers, body]);\n  const triggerRequest = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => (0,ai__WEBPACK_IMPORTED_MODULE_2__.callCompletionApi)({\n      api,\n      prompt,\n      credentials: extraMetadataRef.current.credentials,\n      headers: { ...extraMetadataRef.current.headers, ...options == null ? void 0 : options.headers },\n      body: {\n        ...extraMetadataRef.current.body,\n        ...options == null ? void 0 : options.body\n      },\n      streamProtocol,\n      fetch: fetch2,\n      // throttle streamed ui updates:\n      setCompletion: throttle(\n        (completion2) => mutate(completion2, false),\n        throttleWaitMs\n      ),\n      setLoading: mutateLoading,\n      setError,\n      setAbortController,\n      onFinish,\n      onError\n    }),\n    [\n      mutate,\n      mutateLoading,\n      api,\n      extraMetadataRef,\n      setAbortController,\n      onFinish,\n      onError,\n      setError,\n      streamProtocol,\n      fetch2,\n      throttleWaitMs\n    ]\n  );\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    if (abortController) {\n      abortController.abort();\n      setAbortController(null);\n    }\n  }, [abortController]);\n  const setCompletion = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (completion2) => {\n      mutate(completion2, false);\n    },\n    [mutate]\n  );\n  const complete = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    async (prompt, options) => {\n      return triggerRequest(prompt, options);\n    },\n    [triggerRequest]\n  );\n  const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialInput);\n  const handleSubmit = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (event) => {\n      var _a;\n      (_a = event == null ? void 0 : event.preventDefault) == null ? void 0 : _a.call(event);\n      return input ? complete(input) : void 0;\n    },\n    [input, complete]\n  );\n  const handleInputChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(\n    (e) => {\n      setInput(e.target.value);\n    },\n    [setInput]\n  );\n  return {\n    completion,\n    complete,\n    error,\n    setCompletion,\n    stop,\n    input,\n    setInput,\n    handleInputChange,\n    handleSubmit,\n    isLoading\n  };\n}\n\n// src/use-object.ts\n\n\n\n\nvar getOriginalFetch = () => fetch;\nfunction useObject({\n  api,\n  id,\n  schema,\n  // required, in the future we will use it for validation\n  initialValue,\n  fetch: fetch2,\n  onError,\n  onFinish,\n  headers,\n  credentials\n}) {\n  const hookId = (0,react__WEBPACK_IMPORTED_MODULE_0__.useId)();\n  const completionId = id != null ? id : hookId;\n  const { data, mutate } = (0,swr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n    [api, completionId],\n    null,\n    { fallbackData: initialValue }\n  );\n  const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);\n  const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n  const abortControllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const stop = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    var _a;\n    try {\n      (_a = abortControllerRef.current) == null ? void 0 : _a.abort();\n    } catch (ignored) {\n    } finally {\n      setIsLoading(false);\n      abortControllerRef.current = null;\n    }\n  }, []);\n  const submit = async (input) => {\n    var _a;\n    try {\n      clearObject();\n      setIsLoading(true);\n      const abortController = new AbortController();\n      abortControllerRef.current = abortController;\n      const actualFetch = fetch2 != null ? fetch2 : getOriginalFetch();\n      const response = await actualFetch(api, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          ...headers\n        },\n        credentials,\n        signal: abortController.signal,\n        body: JSON.stringify(input)\n      });\n      if (!response.ok) {\n        throw new Error(\n          (_a = await response.text()) != null ? _a : \"Failed to fetch the response.\"\n        );\n      }\n      if (response.body == null) {\n        throw new Error(\"The response body is empty.\");\n      }\n      let accumulatedText = \"\";\n      let latestObject = void 0;\n      await response.body.pipeThrough(new TextDecoderStream()).pipeTo(\n        new WritableStream({\n          async write(chunk) {\n            accumulatedText += chunk;\n            const { value } = await (0,ai__WEBPACK_IMPORTED_MODULE_2__.parsePartialJson)(accumulatedText);\n            const currentObject = value;\n            if (!(0,ai__WEBPACK_IMPORTED_MODULE_2__.isDeepEqualData)(latestObject, currentObject)) {\n              latestObject = currentObject;\n              mutate(currentObject);\n            }\n          },\n          async close() {\n            setIsLoading(false);\n            abortControllerRef.current = null;\n            if (onFinish != null) {\n              const validationResult = await (0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.safeValidateTypes)({\n                value: latestObject,\n                schema: (0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.asSchema)(schema)\n              });\n              onFinish(\n                validationResult.success ? { object: validationResult.value, error: void 0 } : { object: void 0, error: validationResult.error }\n              );\n            }\n          }\n        })\n      );\n    } catch (error2) {\n      if ((0,_ai_sdk_provider_utils__WEBPACK_IMPORTED_MODULE_4__.isAbortError)(error2)) {\n        return;\n      }\n      if (onError && error2 instanceof Error) {\n        onError(error2);\n      }\n      setIsLoading(false);\n      setError(error2 instanceof Error ? error2 : new Error(String(error2)));\n    }\n  };\n  const clear = () => {\n    stop();\n    clearObject();\n  };\n  const clearObject = () => {\n    setError(void 0);\n    setIsLoading(false);\n    mutate(void 0);\n  };\n  return {\n    submit,\n    object: data,\n    error,\n    isLoading,\n    stop,\n    clear\n  };\n}\nvar experimental_useObject = useObject;\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@ai-sdk+react@2.0.77_react@18.3.1_zod@3.25.76/node_modules/@ai-sdk/react/dist/index.mjs\n");

/***/ })

};
;